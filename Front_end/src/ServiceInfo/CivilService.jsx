import React, { useState } from "react";
import "./CivilService.css";
import ServiceCard from "./ServiceCard";
import { useNavigate } from "react-router-dom";
import { administrativeServices } from "./servicesData";

// Simple Registration Form Component
const RegisterForm = ({ onClose }) => {
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    phone: '',
    service: ''
  });

  const handleSubmit = (e) => {
    e.preventDefault();
    // Handle form submission here
    console.log('Form submitted:', formData);
    onClose();
  };

  const handleChange = (e) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value
    });
  };

  return (
    <div className="register-form-overlay">
      <div className="register-form-container">
        <button className="close-button" onClick={onClose}>√ó</button>
        <h2>ƒêƒÉng k√Ω t∆∞ v·∫•n</h2>
        <form onSubmit={handleSubmit}>
          <div className="form-group">
            <label htmlFor="name">H·ªç v√† t√™n</label>
            <input
              type="text"
              id="name"
              name="name"
              value={formData.name}
              onChange={handleChange}
              required
            />
          </div>
          <div className="form-group">
            <label htmlFor="email">Email</label>
            <input
              type="email"
              id="email"
              name="email"
              value={formData.email}
              onChange={handleChange}
              required
            />
          </div>
          <div className="form-group">
            <label htmlFor="phone">S·ªë ƒëi·ªán tho·∫°i</label>
            <input
              type="tel"
              id="phone"
              name="phone"
              value={formData.phone}
              onChange={handleChange}
              required
            />
          </div>
          <div className="form-group">
            <label htmlFor="service">D·ªãch v·ª• quan t√¢m</label>
            <select
              id="service"
              name="service"
              value={formData.service}
              onChange={handleChange}
              required
            >
              <option value="">Ch·ªçn d·ªãch v·ª•</option>
              <option value="xac-minh">X√°c minh quan h·ªá huy·∫øt th·ªëng</option>
              <option value="tranh-chap">Gi·∫£i quy·∫øt tranh ch·∫•p t√†i s·∫£n</option>
              <option value="thua-ke">Th·ª´a k·∫ø</option>
              <option value="hop-dong">H·ª£p ƒë·ªìng d√¢n s·ª±</option>
            </select>
          </div>
          <button type="submit" className="submit-button">G·ª≠i y√™u c·∫ßu</button>
        </form>
      </div>
    </div>
  );
};

export default function CivilService() {
  const navigate = useNavigate();
  const services = [
    {
      id: "family-relationship",
      title: "X√°c minh quan h·ªá huy·∫øt th·ªëng",
      description: "Gi√°m ƒë·ªãnh ADN ƒë·ªÉ x√°c ƒë·ªãnh m·ªëi quan h·ªá huy·∫øt th·ªëng gi·ªØa c√°c th√†nh vi√™n trong gia ƒë√¨nh.",
      icon: "üß¨",
      features: ["X√©t nghi·ªám ADN ch√≠nh x√°c", "K·∫øt qu·∫£ nhanh ch√≥ng", "B·∫£o m·∫≠t th√¥ng tin"],
      type: "administrative"
    },
    {
      id: "property-dispute",
      title: "Gi·∫£i quy·∫øt tranh ch·∫•p t√†i s·∫£n",
      description: "T∆∞ v·∫•n v√† h·ªó tr·ª£ gi·∫£i quy·∫øt c√°c v·∫•n ƒë·ªÅ li√™n quan ƒë·∫øn t√†i s·∫£n, quy·ªÅn s·ªü h·ªØu v√† ph√¢n chia t√†i s·∫£n.",
      icon: "üè†",
      features: ["T∆∞ v·∫•n ph√°p l√Ω", "H√≤a gi·∫£i tranh ch·∫•p", "ƒê·∫°i di·ªán ph√°p l√Ω"],
      type: "civil"
    },
    {
      id: "inheritance",
      title: "Th·ª´a k·∫ø",
      description: "T∆∞ v·∫•n v·ªÅ quy·ªÅn th·ª´a k·∫ø, di ch√∫c v√† c√°c v·∫•n ƒë·ªÅ ph√°p l√Ω li√™n quan ƒë·∫øn t√†i s·∫£n th·ª´a k·∫ø.",
      icon: "üìú",
      features: ["So·∫°n th·∫£o di ch√∫c", "Gi·∫£i quy·∫øt tranh ch·∫•p", "T∆∞ v·∫•n th·ª´a k·∫ø"],
      type: "civil"
    },
    {
      id: "civil-contract",
      title: "H·ª£p ƒë·ªìng d√¢n s·ª±",
      description: "So·∫°n th·∫£o v√† t∆∞ v·∫•n v·ªÅ c√°c lo·∫°i h·ª£p ƒë·ªìng d√¢n s·ª±, ƒë·∫£m b·∫£o t√≠nh ph√°p l√Ω v√† quy·ªÅn l·ª£i c·ªßa c√°c b√™n.",
      icon: "üìù",
      features: ["So·∫°n th·∫£o h·ª£p ƒë·ªìng", "R√† so√°t ph√°p l√Ω", "T∆∞ v·∫•n ƒëi·ªÅu kho·∫£n"],
      type: "civil"
    }
  ];

  const testimonials = [
    {
      name: "Nguy·ªÖn VƒÉn A",
      role: "Kh√°ch h√†ng",
      content: "D·ªãch v·ª• t∆∞ v·∫•n r·∫•t chuy√™n nghi·ªáp, ƒë·ªôi ng≈© lu·∫≠t s∆∞ nhi·ªát t√¨nh v√† am hi·ªÉu. T√¥i r·∫•t h√†i l√≤ng v·ªõi k·∫øt qu·∫£ ƒë·∫°t ƒë∆∞·ª£c.",
      avatar: "üë®‚Äçüíº"
    },
    {
      name: "Tr·∫ßn Th·ªã B",
      role: "Kh√°ch h√†ng",
      content: "Qu√° tr√¨nh x·ª≠ l√Ω v·∫•n ƒë·ªÅ th·ª´a k·∫ø c·ªßa t√¥i ƒë∆∞·ª£c gi·∫£i quy·∫øt nhanh ch√≥ng v√† hi·ªáu qu·∫£. C·∫£m ∆°n ƒë·ªôi ng≈© t∆∞ v·∫•n vi√™n.",
      avatar: "üë©‚Äçüíº"
    },
    {
      name: "L√™ VƒÉn C",
      role: "Kh√°ch h√†ng",
      content: "D·ªãch v·ª• x√°c minh quan h·ªá huy·∫øt th·ªëng r·∫•t ch√≠nh x√°c v√† b·∫£o m·∫≠t. T√¥i ho√†n to√†n tin t∆∞·ªüng v√†o k·∫øt qu·∫£.",
      avatar: "üë®‚Äçüíº"
    }
  ];

  const [showForm, setShowForm] = useState(false);
  const handleOpenForm = () => setShowForm(true);
  const handleCloseForm = () => setShowForm(false);

  const handleServiceClick = (serviceId) => {
    const service = services.find(s => s.id === serviceId);
    if (service) {
      if (service.type === "administrative") {
        navigate(`/service/${serviceId}`);
      } else {
        navigate(`/civil-service/${serviceId}`);
      }
    }
  };

  return (
    <div className="civil-service-page">
      {/* Hero Section */}
      <div className="hero-section">
        <div className="hero-content">
          <h1>D·ªãch v·ª• T∆∞ v·∫•n D√¢n s·ª± Chuy√™n nghi·ªáp</h1>
          <p>Gi·∫£i ph√°p ph√°p l√Ω to√†n di·ªán cho m·ªçi v·∫•n ƒë·ªÅ d√¢n s·ª± c·ªßa b·∫°n</p>
          <button className="cta-button">T∆∞ v·∫•n mi·ªÖn ph√≠</button>
        </div>
      </div>

      <div className="civil-service-container">
        {/* Introduction Section */}
        <div className="service-header">
          <h2>D·ªãch v·ª• D√¢n s·ª±</h2>
          <p className="service-intro">
            Ch√∫ng t√¥i cung c·∫•p c√°c d·ªãch v·ª• t∆∞ v·∫•n v√† h·ªó tr·ª£ ph√°p l√Ω chuy√™n nghi·ªáp trong lƒ©nh v·ª±c d√¢n s·ª±,
            gi√∫p kh√°ch h√†ng gi·∫£i quy·∫øt c√°c v·∫•n ƒë·ªÅ ph√°p l√Ω m·ªôt c√°ch hi·ªáu qu·∫£ v√† ƒë√∫ng ph√°p lu·∫≠t.
          </p>
        </div>

        {/* Services Grid */}
        <div className="services-grid">
          {services.map((service, index) => (
            <ServiceCard
              key={index}
              service={service}
              onDetail={() => handleServiceClick(service.id)}
              onMore={() => handleServiceClick(service.id)}
            />
          ))}
        </div>

        {/* Why Choose Us Section */}
        <div className="why-choose-us">
          <h2>T·∫°i sao ch·ªçn ch√∫ng t√¥i?</h2>
          <div className="features-grid">
            <div className="feature-item">
              <span className="feature-icon">‚öñÔ∏è</span>
              <h3>ƒê·ªôi ng≈© chuy√™n gia</h3>
              <p>Lu·∫≠t s∆∞ gi√†u kinh nghi·ªám, am hi·ªÉu ph√°p lu·∫≠t</p>
            </div>
            <div className="feature-item">
              <span className="feature-icon">üîí</span>
              <h3>B·∫£o m·∫≠t th√¥ng tin</h3>
              <p>Cam k·∫øt b·∫£o m·∫≠t tuy·ªát ƒë·ªëi th√¥ng tin kh√°ch h√†ng</p>
            </div>
            <div className="feature-item">
              <span className="feature-icon">‚ö°</span>
              <h3>Gi·∫£i quy·∫øt nhanh ch√≥ng</h3>
              <p>X·ª≠ l√Ω v·∫•n ƒë·ªÅ hi·ªáu qu·∫£ trong th·ªùi gian ng·∫Øn nh·∫•t</p>
            </div>
          </div>
        </div>

        {/* Testimonials Section */}
        <div className="testimonials-section">
          <h2>Kh√°ch h√†ng n√≥i g√¨ v·ªÅ ch√∫ng t√¥i?</h2>
          <div className="testimonials-grid">
            {testimonials.map((testimonial, index) => (
              <div key={index} className="testimonial-card">
                <div className="testimonial-avatar">{testimonial.avatar}</div>
                <p className="testimonial-content">{testimonial.content}</p>
                <div className="testimonial-author">
                  <h4>{testimonial.name}</h4>
                  <p>{testimonial.role}</p>
                </div>
              </div>
            ))}
          </div>
        </div>

        {/* Contact Section */}
        <div className="contact-section">
          <h2>Li√™n h·ªá t∆∞ v·∫•n</h2>
          <p>
            ƒê·ªÉ ƒë∆∞·ª£c t∆∞ v·∫•n chi ti·∫øt v·ªÅ c√°c d·ªãch v·ª• d√¢n s·ª±, vui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i qua:
          </p>
          <div className="contact-info">
            <div className="contact-item">
              <span className="contact-icon">üìû</span>
              <div>
                <h4>Hotline</h4>
                <p>1900-xxxx</p>
              </div>
            </div>
            <div className="contact-item">
              <span className="contact-icon">‚úâÔ∏è</span>
              <div>
                <h4>Email</h4>
                <p>contact@example.com</p>
              </div>
            </div>
            <div className="contact-item">
              <span className="contact-icon">üè¢</span>
              <div>
                <h4>ƒê·ªãa ch·ªâ</h4>
                <p>123 ƒê∆∞·ªùng ABC, Qu·∫≠n XYZ, TP. HCM</p>
              </div>
            </div>
          </div>
        </div>
      </div>

      {showForm && <RegisterForm onClose={handleCloseForm} />}
    </div>
  );
}
